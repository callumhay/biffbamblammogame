// ---------------------------------------------------------------------------
// Menu sounds/music =========================================================
// ---------------------------------------------------------------------------

// Main Menu and General Sounds **********************************************

// Main menu background music (looped)
MainMenuBackgroundLoop {
	file = resources/MainMenuBackgroundLoop.ogg
}

// Plays when the user highlights (i.e., changes the selection to) a new item in a menu
MenuItemChangedSelectionEvent {
	file = resources/MenuItemChangedSelectionEvent.ogg
}

// Plays when the user selects a scroller or selection list menu item
MenuItemEnteredEvent {
	file = resources/MenuItemEnteredEvent.ogg
}

// Plays when the user cancels out of a scroller or selection list menu item
MenuItemCancelEvent {
	file = resources/MenuItemCancelEvent.ogg
}

// Plays when the user verifies/selects a button that starts the game / leads to gameplay
MenuItemVerifyAndSelectStartGameEvent {
	file = resources/MenuItemVerifyAndSelectStartGameEvent.ogg
}
// Plays when the user verifies/selects (hits 'enter' on) a menu item
MenuItemVerifyAndSelectEvent {
	file = resources/MenuItemVerifyAndSelectEvent.ogg
}

// Plays when a sub-menu or verify menu opens up
MenuOpenSubMenuWindowEvent {
	file = resources/MenuOpenSubMenuWindowEvent.ogg
}

// NOTE: No sound for the closing of sub menus: It doesn't feel right when it plays since
// there's no accompanying animation

// Plays when a selection list menu item is scrolled
MenuSelectionItemScrolledEvent {
	file = resources/MenuSelectionItemScrolledEvent.ogg
}

// Plays when a scroller (e.g., volume control) menu item is scrolled
MenuScrollerItemScrolledEvent {
	file = resources/MenuScrollerItemScrolledEvent.ogg
}

// Blammopedia Sounds ********************************************************

// Blammopedia background music (looped)
BlammopediaBackgroundLoop {
	file = resources/BlammopediaBackgroundLoop.ogg
}

// Plays when the user highlights (i.e., changes the selection to) a new item in the base blammopedia menu
BlammopediaBaseMenuItemChangedSelectionEvent {
	file = resources/MenuItemChangedSelectionEvent.ogg
}

// Plays when the user verifies/selects (hits 'enter' on) a base blammopedia menu item
BlammopediaBaseMenuItemSelectEvent {
	file = resources/MenuOpenSubMenuWindowEvent.ogg
}

// Plays when the user highlights (i.e., changes the selection to) a new item in on of the blammopedia lists
BlammopediaListItemChangedSelectionEvent {
	file = resources/MenuItemChangedSelectionEvent.ogg
}

// Plays when the user verifies/selects (hits 'enter' on) an item in one of the blammopedia lists
BlammopediaListItemSelectEvent {
	file = resources/BlammopediaListItemSelectEvent.ogg
}

// Plays when the user cancels-out-of/deselects (hits 'esc' on) a previously activated item in one of the blammopedia lists
BlammopediaListItemDeselectEvent {
	file = resources/BlammopediaListItemDeselectEvent.ogg
}

// Plays when the user cancels out of a list and goes back to the base-blammopedia menu
BlammopediaListDeselectEvent {
	file = resources/MenuItemCancelEvent.ogg
}

// Plays when the user attempts to select a blammopedia list item that is locked
BlammopediaListItemLockedEvent {
	file = resources/LevelMenuItemLockedEvent.ogg
}


// World/Movement Select Menu Sounds *****************************************

// World selection menu background music (looped)
WorldMenuBackgroundLoop {
	file = resources/WorldMenuBackgroundLoop.ogg
}

// Plays when the user changes which world is highlighted/selected in the world selection menu
WorldMenuItemChangedSelectionEvent {
	file = resources/WorldMenuItemChangedSelectionEvent.ogg
}

// Plays when the user confirms the selection of a world in the world selection menu
WorldMenuItemSelectEvent {
	file = resources/WorldMenuItemSelectEvent.ogg
}

// Plays when the user attempts to select a world that is locked in the world selection menu
WorldMenuItemLockedEvent {
	file = resources/LevelMenuItemLockedEvent.ogg
}

// Level Select Menu Sounds **************************************************

// Level selection menu background music (looped)
LevelMenuBackgroundLoop {
	file = resources/WorldMenuBackgroundLoop.ogg
}

// Plays when the user changes which level is highlighted/selected in the level selection menu
LevelMenuItemChangedSelectionEvent {
	file = resources/LevelMenuItemChangedSelectionEvent.ogg
}

// Plays when the user confirms the selection of a level in the level selection menu
LevelMenuItemSelectEvent {
	file = resources/MenuItemVerifyAndSelectStartGameEvent.ogg
}

// Plays when the user attempts to select a level that is locked in the level selection menu
LevelMenuItemLockedEvent {
	file = resources/LevelMenuItemLockedEvent.ogg
}

// In-Game Menu Sounds *******************************************************

// Plays when the player pauses the game (which opens the in-game menu)
InGameMenuOpened {
	file = resources/InGameMenuOpened.ogg
}

// Plays when the player unpauses the game (exits the in-game menu and goes back to playing)
InGameMenuClosed {
	file = resources/InGameMenuClosed.ogg
}

// ---------------------------------------------------------------------------
// Movement-specific Sound ===================================================
// ---------------------------------------------------------------------------

// Classical *****************************************************************
WorldBackgroundLoop {
	world = Classical
	file  = resources/ClassicalWorldBackgroundLoop.ogg
}

// Gothic-Romantic ***********************************************************
WorldBackgroundLoop {
	world = Gothic and Romantic
	file  = resources/RomanticWorldBackgroundLoop.ogg
}

// Nouveau *******************************************************************
WorldBackgroundLoop {
	world = Nouveau
	file  = resources/NouveauWorldBackgroundLoop.ogg
}

// Deco **********************************************************************
WorldBackgroundLoop {
	world = Deco
	file  = resources/DecoWorldBackgroundLoop.ogg
}

// Futurism ******************************************************************
WorldBackgroundLoop {
	world = Futurism
	file  =
}

// TODO: Dada-Surrealism
// TODO: Postmodernism


// ---------------------------------------------------------------------------
// In-Game Events ============================================================
// ---------------------------------------------------------------------------

// Paddle Events *************************************************************

PaddleHitWallEvent {
	file = resources/PaddleHitWallEvent_01.ogg | resources/PaddleHitWallEvent_02.ogg | resources/PaddleHitWallEvent_03.ogg | resources/PaddleHitWallEvent_04.ogg
}


// Ball Events ***************************************************************

PlayerLostABallButIsStillAliveEvent {
	file = resources/lost_ball.ogg
}

BallBallCollisionEvent {
	file = resources/BallBallCollisionEvent.ogg
}

BallBossCollisionEvent {
	file = resources/BallBossBasicBounceEvent_01.ogg | resources/BallBossBasicBounceEvent_02.ogg | resources/BallBossBasicBounceEvent_03.ogg | resources/BallBossBasicBounceEvent_04.ogg | resources/BallBossBasicBounceEvent_05.ogg | resources/BallBossBasicBounceEvent_06.ogg | resources/BallBossBasicBounceEvent_07.ogg | resources/BallBossBasicBounceEvent_08.ogg | resources/BallBossBasicBounceEvent_09.ogg | resources/BallBossBasicBounceEvent_10.ogg
}

LastBallSpiralingToDeathLoop {
	file = resources/LastBallSpiralingToDeathLoop.ogg
}
LastBallExplodedEvent {
	file = resources/LastBallExplodedEvent.ogg
}


// Ball and Paddle Events ****************************************************

BallPaddleCollisionEvent {
	file = resources/BallPaddleCollisionEvent_01 ALT.ogg | resources/BallPaddleCollisionEvent_02 ALT.ogg | resources/BallPaddleCollisionEvent_03 ALT.ogg | resources/BallPaddleCollisionEvent_04 ALT.ogg
}

// Happens when the ball attaches itself to the sticky paddle
BallStickyPaddleAttachEvent {
	file = resources/BallStickyPaddleAttachEvent.ogg
}

// Happens when there are multiple balls and the sticky paddle already has a ball stuck to it but another
// ball hits the paddle and bounces off (since there can only be one ball stuck to the paddle at a time)
BallStickyPaddleBounceEvent {
	file = TODO
}

BallShieldPaddleCollisionEvent {
	file = resources/BallShieldPaddleCollisionEvent.ogg
}

BallTeslaLightningCollisionEvent {
	file = resources/BallTeslaLightningCollisionEvent_01.ogg | resources/BallTeslaLightningCollisionEvent_02.ogg | resources/BallTeslaLightningCollisionEvent_03.ogg | resources/BallTeslaLightningCollisionEvent_04.ogg | resources/BallTeslaLightningCollisionEvent_05.ogg | resources/BallTeslaLightningCollisionEvent_06.ogg | resources/BallTeslaLightningCollisionEvent_07.ogg
}

BallOrPaddleGrowEvent {
	file = resources/BallOrPaddleGrowEvent.ogg
}

BallOrPaddleShrinkEvent {
	file = resources/BallOrPaddleShrinkEvent.ogg
}

BallOnPaddleTimerRunningOutLoop {
	file = resources/BallOnPaddleTimerRunningOutLoop.ogg
}


// Ball and Block Events *****************************************************

BallBlockBasicBounceEvent {
	file = resources/BallBlockBasicBounceEvent_01.ogg | resources/BallBlockBasicBounceEvent_02.ogg | resources/BallBlockBasicBounceEvent_03.ogg | resources/BallBlockBasicBounceEvent_04.ogg | resources/BallBlockBasicBounceEvent_05.ogg | resources/BallBlockBasicBounceEvent_06.ogg | resources/BallBlockBasicBounceEvent_07.ogg | resources/BallBlockBasicBounceEvent_08.ogg | resources/BallBlockBasicBounceEvent_09.ogg | resources/BallBlockBasicBounceEvent_10.ogg
}

BallBlockCollisionColourChange {
	file = resources/BallBlockCollisionColourChange_01.ogg | resources/BallBlockCollisionColourChange_02.ogg | resources/BallBlockCollisionColourChange_03.ogg | resources/BallBlockCollisionColourChange_04.ogg | resources/BallBlockCollisionColourChange_05.ogg | resources/BallBlockCollisionColourChange_06.ogg | resources/BallBlockCollisionColourChange_07.ogg | resources/BallBlockCollisionColourChange_08.ogg
}


// Block Events **************************************************************

// TODO: Have a set of sounds for when blocks that contribute to the score multiplier meter
// break... it increases in pitch with each block that gets broken...(see points section)

BombBlockDestroyedEvent {
	file = resources/BombBlockDestroyedEvent.ogg
}

InkBlockDestroyedEvent {
	file = resources/InkBlockDestroyedEvent.ogg
}

// Occurs right after an ink block is destroyed (in most situations). 
// This sound should involve a kind of bubbling/blurbling/? as the gooballs of ink fly at screen and 
// then a splatting as when they hit the screen an partially blind the player.
InkSplatterEvent {
	file = resources/InkSplatterEvent.ogg
}

BasicBlockDestroyedEvent {
	file = resources/BasicBlockDestroyedEvent_01.ogg | resources/BasicBlockDestroyedEvent_02.ogg | resources/BasicBlockDestroyedEvent_03.ogg | resources/BasicBlockDestroyedEvent_04.ogg | resources/BasicBlockDestroyedEvent_05.ogg | resources/BasicBlockDestroyedEvent_06.ogg | resources/BasicBlockDestroyedEvent_07.ogg | resources/BasicBlockDestroyedEvent_08.ogg | resources/BasicBlockDestroyedEvent_09.ogg | resources/BasicBlockDestroyedEvent_10.ogg   
}

CannonBlockLoadedEvent {
	file = resources/CannonBlockLoadedEvent.ogg
}
CannonBlockRotatingLoop {
	file = resources/CannonBlockRotatingLoop.ogg
}
CannonBlockFiredEvent {
	file = resources/CannonBlockFiredEvent.ogg
}

// CannonBlockLoadedWithBallCamBallEvent

PortalTeleportEvent {
	file = resources/PortalTeleportEvent.ogg
}

CollateralBlockFlashingLoop {
	file = resources/CollateralBlockFlashingLoop.ogg
}
CollateralBlockFallingLoop {
	file = resources/CollateralBlockFallingLoop.ogg
}


TeslaLightningArcLoop {
	file = resources/TeslaLightningArcLoop.ogg
}

SwitchBlockActivated {
	file = resources/SwitchBlockActivated.ogg
}

BlockFrozenEvent {
	file = resources/BlockFrozenEvent.ogg
}

BlockOnFireLoop {
	file = resources/BlockOnFireLoop.ogg
}

IceShatterEvent {
	file = resources/IceShatterEvent.ogg
}

IceMeltedEvent {
	file = resources/IceMeltedEvent.ogg
}

// A block that was on fire is hit by the ice ball and the fire 'smokes-out' / gets cancelled by the ice
FireFrozeEvent {
	file = resources/FireFrozeEvent.ogg
}

// Projectile and Beam Events ************************************************

TurretRocketFiredEvent {
	file = resources/TurretRocketFiredEvent.ogg
}
TurretRocketMovingLoop {
	file = resources/TurretRocketMovingLoop.ogg
}
BossRocketFiredEvent {
	file = resources/BossRocketFiredEvent.ogg
}
BossRocketMovingLoop {
	file = resources/BossRocketMovingLoop.ogg
}
PaddleRocketLaunchEvent {
	file = resources/PaddleRocketLaunchEvent.ogg
}
PaddleRocketMovingLoop {
	file = resources/PaddleRocketMovingLoop.ogg
}
RocketExplodedEvent {
	file = resources/RocketExplodedEvent.ogg
}
RemoteControlRocketThrustEvent {
	file = resources/RemoteControlRocketThrustEvent.ogg
}

TurretMineFiredEvent {
	file = resources/TurretMineFiredEvent.ogg
}
PaddleMineFiredEvent {
	file = resources/PaddleMineFiredEvent.ogg
}
MineExplodedEvent {
	file = resources/MineExplodedEvent.ogg
}
MineLatchedOnEvent {
	file = resources/MineLatchedOnEvent.ogg
}

LaserBulletShotEvent {
	file = resources/LaserBulletShotEvent.ogg
}

LaserBeamFiringLoop {
	file = resources/LaserBeamFiringLoop.ogg
}

LaserDeflectedByShieldEvent {
	file = resources/LaserDeflectedByShieldEvent.ogg
}

RocketOrMineDeflectedByShieldEvent {
	file = resources/RocketOrMineDeflectedByShieldEvent.ogg
}

PaddleLaserBulletCollisionEvent {
	file = resources/PaddleLaserBulletCollisionEvent.ogg
}

PaddleLaserBeamCollisionEvent {
	file = resources/PaddleLaserBeamCollisionEvent.ogg
}

PaddleCollateralBlockCollisionEvent {
	file = resources/PaddleCollateralBlockCollisionEvent.ogg
}


// Game Item Events **********************************************************

BallSafetyNetCreatedEvent {
	file = resources/BallSafetyNetCreatedEvent.ogg
}
BallSafetyNetDestroyedEvent {
	file = resources/BallSafetyNetDestroyedEvent.ogg
}

LevelFlipEvent {
	file = resources/LevelFlipEvent.ogg
}
LevelUnflipEvent {
	file = resources/LevelUnflipEvent.ogg
}

PaddleShieldActivatedEvent {
	file = resources/PaddleShieldActivatedEvent.ogg
}
PaddleShieldDeactivatedEvent {
	file = resources/PaddleShieldDeactivatedEvent.ogg
}

MagnetPaddleLoop {
	file = resources/MagnetPaddleLoop.ogg
}

ItemSpawnedEvent {
	file = resources/ItemSpawnedEvent.ogg
}

PowerUpItemActivatedEvent {
	file = resources/PowerUpItemActivatedEvent.ogg
}
PowerNeutralItemActivatedEvent {
	file = resources/PowerNeutralItemActivatedEvent.ogg
}
PowerDownItemActivatedEvent {
	file = resources/PowerDownItemActivatedEvent.ogg
}

ItemTimerEndingLoop {
	file = resources/ItemTimerEndingLoop.ogg
}
ItemTimerEndedEvent {
	file = resources/ItemTimerEndedEvent.ogg
}

// NOTE: This happens a lot in-game and probably shouldn't have a sound/loop associated with it
// but I'm leaving it just in case something works
ItemMovingLoop {
	file = resources/ItemMovingLoop.ogg
}

// Boss-specific Events ******************************************************

BossFadeInIntroEvent {
	file = resources/BossFadeInIntroEvent.ogg
}

BossBackgroundLoop {
	world = Classical
	file = resources/BossClassicalWorldBackgroundLoop.ogg	
}
BossBackgroundLoop {
	world = Gothic and Romantic
	file = resources/BossGothicWorldBackgroundLoop.ogg	
}
BossBackgroundLoop {
	world = Nouveau
	file = resources/BossNouveauWorldBackgroundLoop.ogg	
}
BossBackgroundLoop {
	world = Deco
	file = resources/BossDecoWorldBackgroundLoop.ogg	
}

BossBackgroundLoopTransition {
	file = resources/BossBackgroundLoopTransition.ogg
}

BossAngryBackgroundLoop {
	world = Classical
	file = resources/BossAngryClassicalWorldBackgroundLoop.ogg
}
BossAngryBackgroundLoop {
	world = Gothic and Romantic
	file = resources/BossAngryGothicWorldBackgroundLoop.ogg
}
BossAngryBackgroundLoop {
	world = Nouveau
	file = resources/BossAngryNouveauWorldBackgroundLoop.ogg
}
BossAngryBackgroundLoop {
	world = Deco
	file = resources/BossAngryDecoWorldBackgroundLoop.ogg
}
BossGlowEvent {
	file = resources/BossGlowEvent.ogg
}
BossElectricitySpasmLoop {
	file = resources/BossElectricitySpasmLoop.ogg
}
BossHurtEvent {
	file = resources/BossHurtEvent_01.ogg | resources/BossHurtEvent_02.ogg
}
BossAngryEvent {
	file = resources/BossAngryEvent_01.ogg | resources/BossAngryEvent_02.ogg
}
BossBlowingUpLoop {
	file = resources/BossBlowingUpLoop_01.ogg | resources/BossBlowingUpLoop_02.ogg | resources/BossBlowingUpLoop_03.ogg | resources/BossBlowingUpLoop_04.ogg | resources/BossBlowingUpLoop_05.ogg
}
BossDeathFlashToFullscreenWhiteoutEvent {
	file = resources/BossDeathFlashToFullscreenWhiteoutEvent.ogg
}
BossCrosshairTargetingEvent {
	file = resources/BossCrosshairTargetingEvent.ogg
}
BossLaserBeamLoop {
	file = resources/BossLaserBeamLoop.ogg
}

ClassicalBossSparkleEvent {
	file = resources/ClassicalBossSparkleEvent.ogg
}
ClassicalBossArmShakeLoop {
	file = resources/ClassicalBossArmShakeLoop.ogg
}
ClassicalBossArmAttackEvent {
	file = resources/ClassicalBossArmAttackEvent.ogg
}
ClassicalBossArmAttackHitEvent {
	file = resources/ClassicalBossArmAttackHitEvent.ogg
}
// Occurs when the classical boss charges up its laser-shooting eye ball right
// before its laser barrage attack
ClassicalBossPowerChargeEvent {
	file = resources/ClassicalBossPowerChargeEvent.ogg
}

// Occurs when the boss is about to unleash a summoning attack, where it summons 
// a bunch of nasty items to decend upon the paddle
GothicBossSummonItemChargeEvent {
	file = resources/GothicBossSummonItemChargeEvent.ogg
}
// Occurs when the boss charges up its shockwave to destroy its confines
GothicBossChargeShockwaveEvent {
	file = resources/GothicBossChargeShockwaveEvent.ogg
}
GothicBossMassiveShockwaveEvent {
	file = resources/GothicBossMassiveShockwaveEvent.ogg
}
GothicBossOrbAttackEvent {
	file = resources/GothicBossOrbAttackEvent_01.ogg
}

DecoBossLightningRelayTurnOnEvent {
	file = resources/DecoBossLightningRelayTurnOnEvent.ogg
}
DecoBossArmRotateLoop {
	file = resources/DecoBossArmRotateLoop.ogg
}
DecoBossArmExtendEvent {
	file = resources/DecoBossArmExtendEvent.ogg
}
DecoBossArmRetractEvent {
	file = resources/DecoBossArmRetractEvent.ogg
}
DecoBossArmLevelCollisionEvent {
	file = resources/DecoBossArmLevelCollisionEvent.ogg
}
DecoBossArmPaddleCollisionEvent {
	file = resources/DecoBossArmPaddleCollisionEvent.ogg
}
DecoBossLevelRotatingLoop {
	file = resources/DecoBossLevelRotatingLoop.ogg
}
DecoBossLightningBoltAttackEvent {
	file = resources/DecoBossLightningBoltAttackEvent.ogg
}
DecoBossElectricShockLoop {
	file = resources/DecoBossElectricShockLoop.ogg
}

// Bullet-time / Ball Boost Events *******************************************

EnterBulletTimeEvent {
	file = resources/EnterBulletTimeEvent.ogg
}

InBulletTimeLoop {
	file = resources/InBulletTimeLoop.ogg
}

ExitBulletTimeEvent {
	file = resources/ExitBulletTimeEvent.ogg
}

BallBoostEvent {
	file = resources/BallBoostEvent.ogg
}

BallBoostGainedEvent {
	file = resources/BallBoostGainedEvent.ogg
}

// Star, points and life Events **********************************************

LifeUpAcquiredEvent {
	file = resources/LifeUpAcquiredEvent.ogg
}

StarAcquiredEvent {
	file = resources/StarAcquiredEvent.ogg
}

FiveStarsAcquiredEvent {
	file = resources/FiveStarsAcquiredEvent.ogg
}

ScoreMultiplierIncreasedTo2Event {
	file = resources/ScoreMultiplierIncreasedTo2Event.ogg
}
ScoreMultiplierIncreasedTo3Event {
	file = resources/ScoreMultiplierIncreasedTo3Event.ogg
}
ScoreMultiplierIncreasedTo4Event {
	file = resources/ScoreMultiplierIncreasedTo4Event.ogg
}

ScoreMultiplierLostEvent {
	file = resources/ScoreMultiplierLostEvent.ogg
}

// TODO... Make the sounds increase in pitch (or something) to indicate that good things are happening...
BlockBrokenMultiplierCounterInc1 {
	file = resources/BlockBrokenMultiplierCounterInc1.ogg
}
BlockBrokenMultiplierCounterInc2 {
	file = resources/BlockBrokenMultiplierCounterInc2.ogg
}
BlockBrokenMultiplierCounterInc3 {
	file = resources/BlockBrokenMultiplierCounterInc3.ogg
}
BlockBrokenMultiplierCounterInc4 {
	file = resources/BlockBrokenMultiplierCounterInc4.ogg
}
BlockBrokenMultiplierCounterInc5 {
	file = resources/BlockBrokenMultiplierCounterInc5.ogg
}
BlockBrokenMultiplierCounterInc6 {
	file = resources/BlockBrokenMultiplierCounterInc6.ogg
}
BlockBrokenMultiplierCounterInc7 {
	file = resources/BlockBrokenMultiplierCounterInc7.ogg
}
BlockBrokenMultiplierCounterInc8 {
	file = resources/BlockBrokenMultiplierCounterInc8.ogg
}
BlockBrokenMultiplierCounterInc9 {
	file = resources/BlockBrokenMultiplierCounterInc9.ogg
}

// TODO: Event for when a secret is revealed?
// RevealEvent

// ---------------------------------------------------------------------------
// Non-In-Game State Events ==================================================
// ---------------------------------------------------------------------------

// Level Start and End State Events ******************************************

LevelStartPaddleMoveUpEvent {
	file = resources/LevelStartPaddleMoveUpEvent.ogg
}

LevelStartBallSpawnOnPaddleEvent {
	file = resources/LevelStartBallSpawnOnPaddleEvent.ogg
}

LevelEndFadeoutEvent {
	file = resources/LevelEndFadeoutEvent.ogg
}

// Level Summary State Events ************************************************

LevelSummaryBackgroundLoop {
	file = resources/LevelSummaryBackgroundLoop.ogg
}

LevelSummaryNewHighScoreEvent {
	file = resources/LevelSummaryNewHighScoreEvent.ogg
}

LevelSummaryPointTallyLoop {
	file = resources/LevelSummaryPointTallyLoop.ogg
}

LevelSummaryStarTallyEvent {
	file = resources/LevelSummaryStarTallyEvent.ogg
}

LevelSummaryConfirmEvent {
	file = resources/LevelSummaryConfirmEvent.ogg
}

LevelStarCostPaidUnlockEvent {
	file = resources/LevelStarCostPaidUnlockEvent.ogg
}



// World Complete State Events ***********************************************

WorldCompleteBackgroundLoop {
	file = resources/WorldCompleteBackgroundLoop.ogg
}

WorldCompleteVictoryMessageEvent {
	file = resources/WorldCompleteVictoryMessageEvent.ogg
}

WorldUnlockEvent {
	file = resources/WorldUnlockEvent.ogg
}

// Game-over state events ****************************************************

GameOverEvent {
	file = resources/GameOverEvent.ogg
}


// ---------------------------------------------------------------------------
// Global Sound Effects ======================================================
// ---------------------------------------------------------------------------

// type = gargle
// gargleRate      = 100
// gargleIsSinWave = 1

// type = reverbWave
// reverbWaveInputGain = -2.0
// reverbWaveMix       = -3.0
// reverbWaveTime      = 2000.0
// reverbWaveHFR       = 0.001

// type = chorus
// chorusWetDryMix = 50.0
// chorusDepth     = 100.0
// chorusFeedback  = 50.0
// chorusFrequency = 0.1
// chorusIsSinWave = 1
// chorusDelay     = 20.0

// type = flanger
// flangerWetDryMix      = 20.0
// flangerDepth          = 10.0
// flangerFeedback       = 0
// flangerFrequency      = 0.01
// flangerIsTriangleWave = 0
// flangerDelay          = 10

// type = distortion
// distortionGain             = -15
// distortionIntensity        = 0.0
// distortionPostEQCenterFreq = 100
// distortionPostEQBandwidth  = 100
// distortionPreLowpassCutoff = 8000

BulletTimeEffect {
	type  = reverb3D
	volume = 1.0
	R3DRoomAtten = -1000
	R3DRoomHighFreqAtten = -100
	R3DRoomRolloff = 0
	R3DDecayTime = 1.49
	R3DDecayHighFreqRatio = 0.83
	R3DReflectionAtten = -2602
	R3DReflectionDelay = 0.007
	R3DReverbAtten = 200
	R3DReverbDelay = 0.011
	R3DDiffusion = 100
	R3DDensity = 100
	R3DHighFreqReference = 5000
}

InkSplatterEffect {

	volume = 1.0
	
	type  = flanger, chorus
	
	flangerWetDryMix      = 80.0
	flangerDepth          = 100.0
	flangerFeedback       = 0
	flangerFrequency      = 2
	flangerIsTriangleWave = 1
	flangerDelay          = 20
	
	chorusWetDryMix = 50.0
	chorusDepth     = 50.0
	chorusFeedback  = 5.0
	chorusFrequency = 1.5
	chorusIsSinWave = 1
	chorusDelay     = 10.0
}

PoisonEffect {
	volume = 0.8
	type =  chorus	
	chorusWetDryMix = 70.0
	chorusDepth     = 50.0
	chorusFeedback  = 0.0
	chorusFrequency = 2
	chorusIsSinWave = 1
	chorusDelay     = 20.0
}

// PaddleCamStickyGooEffect {
// }

