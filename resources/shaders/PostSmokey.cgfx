/**
 * PostSmokey.cgfx
 * This shader is a fullscreen post-effect used to give the impression
 * that the player is in a cloudy/foggy place. Specifically this is
 * used when in ball camera mode while the ghost ball is active.
 */

float Timer : TIME <
    string UIWidget = "slider";
    float UIMin = 0.0;
    float UIMax = 4.0;
    float UIStep = 0.01;
    string UIName =  "Timer";
> = 0;

float Scale <
    string UIWidget = "slider";
    float UIMin = 0.0;
    float UIMax = 2.0;
    float UIStep = 0.01;
    string UIName =  "Scale";
> = 1;

float Freq <
    string UIWidget = "slider";
    float UIMin = 0.0;
    float UIMax = 2.0;
    float UIStep = 0.01;
    string UIName =  "Frequency";
> = 1;

float Fade <
    string UIWidget = "slider";
    string UIName =  "Fade";
    float UIMin = 0.0;
    float UIMax = 1.0;
    float UIStep = 0.001;
> = 0.0f;

float3 Colour <
    string UIName =  "Smokey Colour";
    string UIWidget = "Color";
> = {0.111f, 0.137f, 0.289f};

texture NoiseTexture  <
    string ResourceName = "noiseL8_32x32x32.dds";
    string UIName =  "Noise Texture";
    string ResourceType = "3D";
>;

sampler3D NoiseSampler = sampler_state {
    Texture = <NoiseTexture>;
    MinFilter = LinearMipMapLinear;
    MagFilter = Linear;
    WrapS = Repeat;
    WrapT = Repeat;
    WrapR = Repeat;    
};

texture SceneTexture <
    string ResourceName = "scene_background_test.jpg";
    string UIName =  "Scene Texture";
    string ResourceType = "2D";
>;

sampler2D SceneSampler = sampler_state {
    Texture = <SceneTexture>;
    WrapS = ClampToEdge;
    WrapT = ClampToEdge;
    MinFilter = LinearMipMapLinear;
    MagFilter = Linear;
};

texture OverlayTexture <
    string ResourceName = "scene_background_test.jpg";
    string UIName =  "Overlay Texture";
    string ResourceType = "2D";
>;

sampler2D OverlaySampler = sampler_state {
    Texture = <OverlayTexture>;
    WrapS = ClampToEdge;
    WrapT = ClampToEdge;
    MinFilter = LinearMipMapLinear;
    MagFilter = Linear;
};

/**
 * The fullscreen pixel shader that adds perlin noise to the 
 * scene based on various tweakable parameters.
 */
float4 post_smokey_PS(float2 UV : TEXCOORD0) : COLOR {
    float3 sceneColour = tex2D(SceneSampler, UV).rgb;
    float4 noise       = tex3D(NoiseSampler, Scale * float3(UV, Freq * Timer));
    float noiseTotal = (noise.x + noise.y + noise.z + noise.w) * 2.0f;
    
    float3 noiseAddColour = 0.5f * Fade * Colour.rgb * noiseTotal.xxx;
    
    return float4(noiseAddColour + sceneColour.rgb, 1);
}

/**
 * The fullscreen pixel shader that adds perlin noise and a overlay texture to the 
 * scene based on various tweakable parameters.
 */
float4 post_icy_PS(float2 UV : TEXCOORD0) : COLOR {
    float3 sceneColour   = tex2D(SceneSampler, UV).rgb;
    float4 overlayColour = tex2D(OverlaySampler, UV).rgba;
    float4 noise         = tex3D(NoiseSampler, Scale * float3(UV, Freq * Timer));
    float noiseTotal     = (noise.x + noise.y + noise.z + noise.w) * 1.25f;
    
    float3 noiseAddColour = Fade * Colour.rgb * noiseTotal.xxx;
    
    return (1.0f - overlayColour.a) * float4(noiseAddColour + sceneColour.rgb, 1.0f) + 
                   0.5f * overlayColour.a * float4(overlayColour.rgb, 1.0f);
}

technique PostSmokey <string Script = "Pass=p0;";> {
    pass p0 <string Script = "Draw=geometry;";> {
        FragmentProgram = compile arbfp1 post_smokey_PS();
    }
}

technique PostIcy <string Script = "Pass=p0;";> {
    pass p0 <string Script = "Draw=geometry;";> {
        FragmentProgram = compile arbfp1 post_icy_PS();
    }
}


